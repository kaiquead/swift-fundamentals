name: iOS CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build-and-test:
    runs-on: macos-14

    steps:
      - name: Project Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Chose Xcode 16.2
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16.2'

      - name: Confirm Xcode version
        run: xcodebuild -version

      - name: List available iOS simulators
        run: xcrun simctl list devices

      - name: Check conflicts in project
        run: |
          set -o pipefail
          grep -r "<<<<<<<" swift-fundamentals/swift-fundamentals.xcodeproj && {
            echo "❌ Merge Conflicts detected in .xcodeproj"
            exit 1
          } || echo "✅ No conflicts detected in .xcodeproj"

      - name: Build and test with custom simulator
        run: |
          set -o pipefail
          cd swift-fundamentals

          # Escolhe um runtime de iOS válido instalado
          RUNTIME=$(xcrun simctl list runtimes | grep "iOS 17.2" | grep -oE 'com.apple.CoreSimulator.SimRuntime.iOS-[^ ]+')
          
          if [ -z "$RUNTIME" ]; then
            echo "❌ Runtime iOS 17.2 não encontrado no runner"
            exit 1
          fi

          echo "✅ Usando runtime: $RUNTIME"

          # Cria um novo simulador
          SIMULATOR_ID=$(xcrun simctl create "CI iPhone 15 Pro" "iPhone 15 Pro" "$RUNTIME")

          echo "✅ Simulador criado com UDID: $SIMULATOR_ID"

          # Inicializa e aguarda
          xcrun simctl boot "$SIMULATOR_ID"
          xcrun simctl bootstatus "$SIMULATOR_ID" -b

          # Espera propagação no Xcode
          sleep 10

          # Executa testes
          xcodebuild test \
            -project swift-fundamentals.xcodeproj \
            -scheme swift-fundamentals \
            -sdk iphonesimulator \
            -destination "id=$SIMULATOR_ID" \
            -enableCodeCoverage YES \
            -resultBundlePath build/ResultBundle \
            -quiet | xcpretty

          # Deleta simulador após uso para manter ambiente limpo
          xcrun simctl delete "$SIMULATOR_ID"



      - name: List snapshots (debug)
        run: |
          set -o pipefail
          find /Users/runner/work/ -type d -name "__Snapshots__" -exec ls -R {} \; || echo "No snapshots generated"
